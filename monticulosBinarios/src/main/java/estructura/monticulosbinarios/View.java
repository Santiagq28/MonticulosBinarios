/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package estructura.monticulosbinarios;

import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class View extends javax.swing.JFrame {
    
    MonticulosBinarios mb = new MonticulosBinarios();
    /**
     * Creates new form View
     */
    public View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insertarNodo = new javax.swing.JButton();
        eliminarMaximo = new javax.swing.JButton();
        buscarNodo = new javax.swing.JButton();
        imprimirMonticulo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        insertarNodo.setText("Insertar Nodo");
        insertarNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarNodoActionPerformed(evt);
            }
        });

        eliminarMaximo.setText("Eliminar Máximo");
        eliminarMaximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMaximoActionPerformed(evt);
            }
        });

        buscarNodo.setText("Buscar Nodo");
        buscarNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarNodoActionPerformed(evt);
            }
        });

        imprimirMonticulo.setText("Imprimir");
        imprimirMonticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirMonticuloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(insertarNodo)
                        .addGap(152, 152, 152))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(eliminarMaximo)
                        .addGap(142, 142, 142))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(imprimirMonticulo)
                            .addComponent(buscarNodo))
                        .addGap(158, 158, 158))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(insertarNodo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarMaximo)
                .addGap(18, 18, 18)
                .addComponent(buscarNodo)
                .addGap(18, 18, 18)
                .addComponent(imprimirMonticulo)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertarNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarNodoActionPerformed
        mb.insertar(Integer.parseInt(JOptionPane.showInputDialog("Ingrese el valor del nodo:")));
    }//GEN-LAST:event_insertarNodoActionPerformed

    private void eliminarMaximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMaximoActionPerformed
        mb.eliminarMaximo();
        JOptionPane.showMessageDialog(null,"Máximo eliminado");
    }//GEN-LAST:event_eliminarMaximoActionPerformed

    private void buscarNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarNodoActionPerformed
        Nodo nodo = new Nodo(0,0);
        nodo = mb.encontrarNodo(Integer.parseInt(JOptionPane.showInputDialog("Ingrese el valor del nodo:")));
        JOptionPane.showMessageDialog(null,"El valor del nodo es "+nodo.valor);
    }//GEN-LAST:event_buscarNodoActionPerformed

    private void imprimirMonticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirMonticuloActionPerformed
        mb.imprimir();
    }//GEN-LAST:event_imprimirMonticuloActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarNodo;
    private javax.swing.JButton eliminarMaximo;
    private javax.swing.JButton imprimirMonticulo;
    private javax.swing.JButton insertarNodo;
    // End of variables declaration//GEN-END:variables
}
